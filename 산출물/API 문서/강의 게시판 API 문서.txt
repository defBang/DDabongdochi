강의 게시판 API 문서

공통 에러 처리

로그인 필요
- 로그인 상태가 아닐 때
alert 메시지 표시 후 로그인 페이지로 이동
[ 403 ] { "message":"로그인이 필요합니다." }

비로그인 필요
- 로그인 상태일 때
[ 403 ] { "message":"로그인 상태입니다." }

서버 오류
서버 내부 오류는 클라이언트에 그 내용을 노출시키지 않는다.
500, 서버 오류!만 표시함
오류 코드와 메시지 출력
[ 500 ] { "message":"서버 오류!" }


###### 강의 게시판 /api/lecture ######

1) 강의 게시글/추천글 목록
    [ GET ] /api/lecture

요청:
    쿼리 스트링:
        - 추천글 목록
        /?mode=best

        - 페이지
        /?p=${ page }

        예시)
            /api/lecture/?mode=best&p=2
            /api/lecture/?p=6
    
응답:
    요청 성공
    [ 200 ]
    [
        {
            "startPage": 첫 페이지 번호,
            "endPage": 끝 페이지 번호,
            "isPrev": 이전 화살표 유무,
            "isNext": 다음 화살표 유무,
            "totalPages": 총 페이지 개수,
        },
        [
            {
                "no": 행 번호,
                "lecture_post_id": 강의 게시글 ID,
                "lecture_main_tag": "메인 태그",
                "lecture_profil_img_link": "이미지 주소",
                "lecture_platform": "강의 플랫폼",
                "lecture_name": "강의 제목",
                "comment_count": 댓글 개수,
                "lecturer": "강사",
                "date": "작성일", // 주석 작성일 현재시간 기준으로 24시간 이내 HH:mm, 이후 MM-DD
                "rate": 추천수 합
            }, { ... }, { ... }, ...
        ]
    ]

예시 응답:
    [
        {
            "startPage": 1,
            "endPage": 4,
            "isPrev": false,
            "isNext": false,
            "totalPages": 4
        },
        [
            {
                "no": 16,
                "lecture_post_id": 16,
                "lecture_main_tag": "JavaScript",
                "lecture_profil_img_link": "https://cdn.inflearn.com/public/courses/329818/cover/ced6683d-8cb4-4ce6-b2df-9c6a480c2bfb/js-thumbnail.jpg",
                "lecture_platform": "inflearn",
                "lecture_name": "자바스크립트 ES6+ 기초 핵심 문법",
                "comment_count": 0,
                "lecturer": "이룸코딩",
                "date": "10-10",
                "rate": 0
            },  { ... }, { ... }, ...
        ]
    ]

2) 강의 게시글 검색 결과 목록
    [ GET ] /api/lecture/search

요청:
    쿼리 스트링:
        - 검색할 항목 & 검색어
        target: lecturer, title, tag
        /?${ target }=${ value }

        - 페이지
        /?p=${ page }

        예시)
            /api/lecture/search/?lecturer=강사이름&p=4
            /api/lecture/search/?title=자바스크립트

응답: 강의 게시글/추천글 목록과 같다.

3) 강의 게시글 작성
    [ POST ] /api/lecture/write
    로그인 필요

요청:
    {
        "title": "강의 제목",
        "platform": "강의 플랫폼",
        "platformUrl": "강의 플랫폼 주소",
        "lecturer": "강사 이름",
        "link": "강좌 주소",
        "profilImgLink": "강의 프로필 이미지 주소"
        "mainTag": "메인 태그"
        "tags": [ "메인 태그", "태그1", "태그2", ... ]
    }

응답:
    작성 성공
    [ 200 ] {"lecture_post_id": 강의 게시글 ID}

4) 강의 게시글 페이지
    [ GET ] /api/lecture/:id

응답:
    존재하지 않는 게시글일 때
    오류 코드와 메시지 출력
    [ 404 ] { "message": "존재하지 않는 글입니다." }

    요청 성공
    [ 200 ]
    [
        {
            "isAdmin": 관리자 여부(0: 일반유저, 1: 관리자)
        },
        [
            {
                "lecture_post_id": 강의 게시글 ID,
                "lecture_name": "강의 제목",
                "lecture_platform": "강의 플랫폼",
                "lecture_platform_url": "강의 플랫폼 주소",
                "lecturer": "강사 이름",
                "lecture_link": "강좌 주소",
                "lecture_profil_img_link": "강의 프로필 이미지 주소",
                "lecture_main_tag": "메인 태그",
                "comment_count": 댓글 개수,
                "rate_up": 추천 수,
                "rate_down": 비추천 수,
                "date": "작성일", // 주석 작성일 YYYY-MM-DD HH:mm:ss
                "recent_update_date": 수정일 // 주석: null일 경우 수정일을 표시하지 않는다. YYYY-MM-DD HH:mm:ss
            }
        ],
        [
            {"tag_name":"메인 태그"},
            {"tag_name":"태그1"},
            {"tag_name":"태그2"},
            {"tag_name":"태그3"}, ...
        ],
        [
            {
                "comment_id": 댓글 ID,
                "lecture_post_id": 강의 게시글 ID, 
                "channel_post_id": 채널 게시글 ID,
                "free_post_id": 자유게시판 게시글 ID,
                "comment_writer": 작성자 ID,
                "comment_writer_nickname": "작성자 닉네임",
                "comment_content": "댓글 내용",
                "date": "작성일", // 주석 작성일 YYYY-MM-DD HH:mm:ss
                "recent_update_date": 수정일 // 주석: null일 경우 수정일을 표시하지 않는다. YYYY-MM-DD HH:mm:ss
            }, { ... }, { ... }, ...
        ]
    ]

예시 응답:
    [
        {
            "isAdmin": 0
        },
        [
            {
                "lecture_post_id": 2,
                "lecture_name": "생활코딩 - 자바스크립트(JavaScript) 기본",
                "lecture_platform": "인프런",
                "lecture_platform_url": "https://www.inflearn.com/",
                "lecturer": "Egoing Lee",
                "lecture_link": "https://www.inflearn.com/course/%EC%A7%80%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%96%B8%EC%96%B4-%EA%B8%B0%EB%B3%B8",
                "lecture_profil_img_link": "https://cdn.inflearn.com/wp-content/uploads/js.png",
                "lecture_main_tag": "JavaScript",
                "comment_count": 1,
                "rate_up": 2,
                "rate_down": -2,
                "date": "2023-10-10 16:17:53",
                "recent_update_date": null
            }
        ],
        [
            {
                "tag_name": "자바스크립트"
            },
            {
                "tag_name": "초급"
            }
        ],
        [
            {
                "comment_id": 51,
                "lecture_post_id": 2,
                "channel_post_id": null,
                "free_post_id": null,
                "comment_writer": 3,
                "comment_writer_nickname": "이것저것",
                "comment_content": "다른 게시글 댓글1",
                "date": "2023-10-10 17:32:57",
                "recent_update_date": null
            },
            {
                "comment_id": 52,
                "lecture_post_id": 2,
                "channel_post_id": null,
                "free_post_id": null,
                "comment_writer": 2,
                "comment_writer_nickname": "쿼리",
                "comment_content": "다른 게시글 댓글2",
                "date": "2023-10-10 17:32:58",
                "recent_update_date": null
            },
        ]
    ]

5) 강의 게시글 수정 페이지 데이터 요청
    [ GET ] /api/lecture/:id/edit
    로그인 필요

응답:
    수정하려는 게시글이 존재하지 않을 때
    오류 코드와 메시지 출력
    [ 404 ] { "message": "존재하지 않는 글입니다." }

    요청 성공
    [ 200 ]
    [
        [
            {
                "lecture_name": "강의 제목",
                "lecture_platform": "강의 플랫폼",
                "lecture_platform_url": "강의 플랫폼 주소",
                "lecturer": "강사 이름",
                "lecture_link": "강좌 주소",
                "lecture_profil_img_link": "강의 프로필 이미지 주소",
                "lecture_main_tag": "메인 태그"
            }
        ],
        [
            {"tag_name":"태그1"},
            {"tag_name":"태그2"},
            {"tag_name":"태그3"},
            {"tag_name":"태그4"}, ...
        ]
    ]

예시 응답:
    [
        [
            {
                "lecture_name": "생활코딩 - 자바스크립트(JavaScript) 기본",
                "lecture_platform": "인프런",
                "lecture_platform_url": "https://www.inflearn.com/",
                "lecturer": "Egoing Lee",
                "lecture_link": "https://www.inflearn.com/course/%EC%A7%80%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%96%B8%EC%96%B4-%EA%B8%B0%EB%B3%B8",
                "lecture_profil_img_link": "https://cdn.inflearn.com/wp-content/uploads/js.png",
                "lecture_main_tag": "JavaScript"
            }
        ],
        [
            {
                "tag_name": "JavaScript"
            },
            {
                "tag_name": "초급"
            }
        ]
    ]

6) 강의 게시글 수정
    [ PUT ] /api/lecture/:id/edit
    로그인 필요

요청:
    {
        "title": "강의 제목",
        "platform": "강의 플랫폼",
        "platformUrl": "강의 플랫폼 주소",
        "lecturer": "강사 이름",
        "link": "강좌 주소",
        "profilImgLink": "강의 프로필 이미지 주소"
        "mainTag": "메인 태그"
        "tags": [ "메인 태그", "태그1", "태그2", ... ]
    }

응답:
    수정하려는 게시글이 존재하지 않을 때
    오류 코드와 메시지 출력
    [ 404 ] { "message": "존재하지 않는 글입니다." }

    수정 성공
    [ 200 ]

7) 강의 게시글 삭제
    [ DELETE ] /api/lecture/:id/delete
    로그인 필요

응답:
    삭제하려는 게시글이 존재하지 않을 때
    오류 코드와 메시지 출력
    [ 404 ] { "message": "존재하지 않는 글입니다." }

    해당 게시글을 삭제하려는 유저가 관리자가 아닐 때
    오류 코드와 메시지 출력
    [ 403 ] { "message": "접근 권한이 없습니다." }

    삭제 성공
    [ 200 ]